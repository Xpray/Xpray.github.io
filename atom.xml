<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-01-24T09:41:30.896Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Xpray</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Sequential Consistency</title>
    <link href="http://example.com/2021/01/24/Sequential-Consistency/"/>
    <id>http://example.com/2021/01/24/Sequential-Consistency/</id>
    <published>2021-01-24T09:28:46.000Z</published>
    <updated>2021-01-24T09:41:30.896Z</updated>
    
    <content type="html"><![CDATA[<p>Sequential Consistency 是比Strong Consistency稍弱的一致性模型，可以按照如下方式来理解。<br>对于Single Object，R(x), W(y)分别表示从该Object读到了value x和写入了value y，考虑以下两个场景：</p><p>场景1:<br>Process A: W(1)<br>Process B: W(5)<br>Process B: R(5)<br>Process A: R(1)</p><p>场景2:<br>Process A: W(1)<br>Process A: W(3)<br>Process B: R(1)<br>Process B: R(3)</p><p>从全局来看，这个系统本身是不完美的（非强一致），但是这两个场景是可以找到一个调度顺序使其满足Sequential Consistency<br>对于场景1，系统可以如下调度W(1)，R(1)，W(5)，R(5)。<br>对于场景2，系统可以如下调度W(1)，R(1)，W(3)，R(3)。</p><p>这两度调度方式都不破坏Process内部的相对顺序，使其从Process内部的视角看来是正确的。<br>这就是Sequential Consistency的关键性质。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Sequential Consistency 是比Strong Consistency稍弱的一致性模型，可以按照如下方式来理解。&lt;br&gt;对于Single Object，R(x), W(y)分别表示从该Object读到了value x和写入了value y，考虑以下两个场景：</summary>
      
    
    
    
    
    <category term="Consistency" scheme="http://example.com/tags/Consistency/"/>
    
  </entry>
  
  <entry>
    <title>MIT6.824</title>
    <link href="http://example.com/2021/01/07/MIT6-824/"/>
    <id>http://example.com/2021/01/07/MIT6-824/</id>
    <published>2021-01-07T06:24:47.000Z</published>
    <updated>2021-01-07T06:25:43.658Z</updated>
    
    <content type="html"><![CDATA[<p>2021年的第一个周，给自己定一个小计划，学习MIT分布式系统课程6.824</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2021年的第一个周，给自己定一个小计划，学习MIT分布式系统课程6.824&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Apache Doris Metadata Management</title>
    <link href="http://example.com/2020/12/15/Apache-Doris-Metadata-Management/"/>
    <id>http://example.com/2020/12/15/Apache-Doris-Metadata-Management/</id>
    <published>2020-12-15T06:32:19.000Z</published>
    <updated>2020-12-15T10:30:49.665Z</updated>
    
    <content type="html"><![CDATA[<p>— Metadata视图</p><ul><li>Metadata的几种存在形式<ul><li>Memory， 内存中的全量数据，用于处理metadata相关的请求</li><li>Image，对历史数据的一次归档，作为恢复Memory的Base</li><li>BDBJE，对memory中metadata的修改会产生changelog，记录metadata的增量</li></ul></li><li>Master Node Memory中的Metadata是最新的，对于metadata的change总是会先修改master的memory 然后再通过BDBJE同步到其他节点   </li><li>除了memory中的metadata，任何FE节点的Image + BDBJE中的changelog 可以回放出一份和master memory中相同的metadata </li></ul><p>— Metadata写入和消费</p><ul><li>对metadata的修改，请求会落到FE的Master节点，Master节点先修改memory中的meta，然后通过BDBJE写出一条change log，BDBJE会将changelog同步到其他节点上</li><li>对于非master node，进程中会启动一个Replay线程，周期性的从BDBJE获取changelog，然后直接修改本地memory中的metadata</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;— Metadata视图&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Metadata的几种存在形式&lt;ul&gt;
&lt;li&gt;Memory， 内存中的全量数据，用于处理metadata相关的请求&lt;/li&gt;
&lt;li&gt;Image，对历史数据的一次归档，作为恢复Memory的Base&lt;/li&gt;
&lt;li&gt;B</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>First Test</title>
    <link href="http://example.com/2020/12/12/First-Test/"/>
    <id>http://example.com/2020/12/12/First-Test/</id>
    <published>2020-12-11T16:54:32.000Z</published>
    <updated>2020-12-11T16:54:56.800Z</updated>
    
    <content type="html"><![CDATA[<p>Haha</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Haha&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/12/12/hello-world/"/>
    <id>http://example.com/2020/12/12/hello-world/</id>
    <published>2020-12-11T16:38:21.212Z</published>
    <updated>2020-12-11T16:38:21.212Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
